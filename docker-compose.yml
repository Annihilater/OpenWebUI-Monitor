services:
  app:
    build: .
    ports:
      - "7878:3000"
    env_file:
      - .env.local
    environment:
      - POSTGRES_HOST=db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=openwebui_monitor
      - POSTGRES_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/openwebui_monitor?sslmode=disable
      - POSTGRES_URL_NON_POOLING=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/openwebui_monitor?sslmode=disable
      - POSTGRES_URL_NO_SSL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/openwebui_monitor?sslmode=disable
      - POSTGRES_PRISMA_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/openwebui_monitor?sslmode=disable
      - OPENWEBUI_DOMAIN=${OPENWEBUI_DOMAIN}
      - API_KEY=${API_KEY}
      - INIT_BALANCE=${INIT_BALANCE:-1}
    depends_on:
      db:
        condition: service_healthy
    restart: always

  db:
    image: postgres:15-alpine
    expose:
      - "5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=openwebui_monitor
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

volumes:
  postgres_data:
